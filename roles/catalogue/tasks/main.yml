- name: Enabling NodeJS 20
  ansible.builtin.shell:  dnf module disable nodejs -y ; dnf module enable nodejs:20 -y

- name: Installing nodejs 20
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: creating app user for {{ component }}
  ansible.builtin.user:
    name: "{{ app_user }}"

- name: cleanup old {{ component }} content
  ansible.builtin.file: 
    path: "{{ app_path }}"
    state: absent 
  ignore_errors: true

- name: Creating {{ component }} app directory
  ansible.builtin.file: 
    path: "{{ app_path }}"
    state: directory 

- name: Downloading and extracting {{ component }} content
  ansible.builtin.unarchive:
    src: "{{ url }}"
    dest: "{{ app_path }}"
    remote_src: yes

- name: Configuring mongodrepo 
  ansible.builtin.template:
    src: mongodb.repo
    dest: /etc/yum.repos.d/mongodb.repo

- name: Installing mongoshell
  ansible.builtin.dnf:
    name: mongodb-mongosh
    state: present

- name: Injecting schema 
  ansible.builtin.shell: mongosh --host mongodb-{{ env }}.clouding-app.shop </app/db/master-data.js

- name: Configuring systemd
  ansible.builtin.template:
    src: "{{ component }}.service"
    dest: /etc/systemd/system/{{ component }}.service

- name: Generating node modules
  ansible.builtin.shell: npm install
  args:
    chdir: "{{ app_path }}"

- name: Restarting {{ component }} service
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: catalogue
    enabled: true

- name: Configuring hostname for {{ component }}
  ansible.builtin.shell: set-hostname {{ component }}-{{ env }}