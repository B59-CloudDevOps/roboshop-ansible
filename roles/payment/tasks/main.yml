- name: Installing Python3
  ansible.builtin.dnf:
    name: 
      - python3
      - gcc
      - python3-devel
    state: present

- name: creating app user for {{ component }}
  ansible.builtin.user:
    name: "{{ app_user }}"

- name: cleanup old {{ component }} content
  ansible.builtin.file: 
    path: "{{ app_path }}"
    state: absent 
  ignore_errors: true

- name: Creating {{ component }} app directory
  ansible.builtin.file: 
    path: "{{ app_path }}"
    state: directory 

- name: Downloading and extracting {{ component }} content
  ansible.builtin.unarchive:
    src: "{{ url }}"
    dest: "{{ app_path }}"
    remote_src: yes

- name: Generating artifacts
  ansible.builtin.shell: pip3 install -r requirements.txt
  args:
    chdir: "{{ app_path }}"

- name: Configuring systemd
  ansible.builtin.template:
    src: "{{ component }}.service"
    dest: /etc/systemd/system/{{ component }}.service

- name: Restarting {{ component }} service
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: "{{ component }}"
    enabled: true

- name: Configuring hostname for {{ component }}
  ansible.builtin.shell: set-hostname {{ component }}-{{ env }}